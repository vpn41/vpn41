server_tokens off;

# http -> https
server {
	listen 80;
	listen [::]:80;
	server_name vpn4.one www.vpn4.one;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
	    return 301 https://$server_name$request_uri;
	}
}

upstream www {
  server vpn41:8080;
}

limit_req_zone $binary_remote_addr zone=mylimit:50m rate=50r/s;

server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl;
    server_name vpn4.one www.vpn4.one;

# SSL
    ssl_certificate /etc/letsencrypt/live/vpn4.one/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/vpn4.one/privkey.pem;

#    include /etc/letsencrypt/options-ssl-nginx.conf;
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;

    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
    chunked_transfer_encoding on;

	# disable "an upstream response is buffered to a temporary file"
	proxy_max_temp_file_size 0;

	# disable "a client request body is buffered to a temporary file"
	proxy_request_buffering off;

    location / {
        limit_req zone=mylimit burst=50 nodelay;

        proxy_pass http://www;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 900;
    }

    add_header Strict-Transport-Security "max-age=31536000" always;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 7;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types application/javascript text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
}
